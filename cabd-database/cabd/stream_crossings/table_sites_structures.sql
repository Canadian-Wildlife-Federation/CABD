-- drops and creates sites and structures table
-- source: tbl_structure_stream_crossings_sites.xlsx & tbl_structure_stream_crossings_structures.xlsx

-- notes:
-- added a data_source_code field to both tables to identify the source (modelled crossings, satellite, community,assessment)
-- include_in_act I've setup as generated
-- last_modified needs to be sorted still - triggers or other way to maintain

drop table if exists stream_crossings.structures;
drop table if exists stream_crossings.sites;

create table stream_crossings.sites(
    cabd_id uuid not null primary key,
    last_modified timestamp, --[set on update]
    data_source_code varchar(1) check (data_source_code in ('m', 's', 'c', 'a')),  --m = modelled crossing, s=satellite, c=community , a=assesment
    data_source_id uuid,
    other_id varchar,
    cabd_assessment_id uuid,
    original_assessment_id varchar ,
    date_assessed date,
    lead_assessor varchar,
    municipality varchar,
    stream_name varchar,
    road_name varchar,
    road_type_code integer references cabd.road_type_codes (code),
    location_description varchar,
    land_ownership_context varchar,
    incomplete_assess_code integer references stream_crossings.incomplete_assessment_codes(code),
    crossing_type_code integer references stream_crossings.crossing_type_codes(code),
    num_structures integer,
    photo_id_inlet varchar,
    photo_id_outlet varchar,
    photo_id_upstream varchar,
    photo_id_downstream varchar,
    photo_id_road_surface varchar,
    photo_id_other_a varchar,
    photo_id_other_b varchar,
    photo_id_other_c varchar,
    flow_condition_code integer references stream_crossings.flow_condition_codes(code),
    crossing_condition_code integer references stream_crossings.crossing_condition_codes(code),
    site_type_code integer references stream_crossings.site_type_codes(code),
    alignment_code integer references stream_crossings.alignment_codes(code),
    road_fill_height_m numeric,
    bankfull_width_upstr_a_m numeric,
    bankfull_width_upstr_b_m numeric,
    bankfull_width_upstr_c_m numeric,
    bankfull_width_upstr_avg_m numeric,
    bankfull_width_dnstr_a_m numeric,
    bankfull_width_dnstr_b_m numeric,
    bankfull_width_dnstr_c_m numeric,
    bankfull_width_dnstr_avg_m numeric,
    bankfull_confidence_code integer references stream_crossings.confidence_codes(code),
    scour_pool_tailwater_code integer references stream_crossings.scour_pool_codes(code),
    crossing_comments varchar,
    original_point geometry, 
    snapped_point geometry, --auto updated based on spatial query
    snapped_ncc geometry, --auto updated based on spatial query
    province_territory_code varchar, --auto updated based on spatial query
    nhn_watershed_id varchar, --auto updated based on spatial query
    strahler_order integer,
    assessment_type_code integer,
    addressed_status_code integer,
    chu_12_id varchar, --[auto updated based on spatial query]
    chu_10_id varchar, --[auto updated based on spatial query]
    chu_8_id varchar, --[auto updated based on spatial query]
    chu_6_id varchar, --[auto updated based on spatial query]
    chu_4_id varchar, --[auto updated based on spatial query]
    chu_2_id varchar, --[auto updated based on spatial query]
    include_in_act boolean GENERATED always as (case when snapped_ncc is not null then true else false end) stored   --IF sites.snapped_ncc IS NOT NULL THEN "TRUE"; ELSE "FALSE"
);

create table stream_crossings.structures(
    last_modified timestamp, --[set on update]
    structure_id uuid not null primary key,  --[autogenerated]
    site_id uuid references stream_crossings.sites(cabd_id),
    data_source_code varchar(1) check (data_source_code in ('m', 's', 'c', 'a')),  --m = modelled crossing, s=satelite, c=community , a=assesment
    data_source_id uuid, --mapped from data_source_id of matching sites record
    cabd_assessment_id uuid,
    original_assessment_id varchar,
    primary_structure boolean,
    structure_number integer,
    outlet_shape_code integer references stream_crossings.shape_codes(code),
    structure_material_code integer[], -- stream_crossings.material_codes(code)
    internal_structures_code integer references stream_crossings.internal_structure_codes(code),
    liner_material_code integer references stream_crossings.material_codes(code),
    outlet_armouring_code integer references stream_crossings.armouring_codes(code),
    outlet_grade_code integer references stream_crossings.grade_codes(code),
    outlet_width_m numeric,
    outlet_height_m numeric,
    outlet_substrate_water_width_m numeric,
    outlet_water_depth_m numeric,
    abutment_height_m numeric,
    outlet_drop_to_water_surface_m numeric,
    outlet_drop_to_stream_bottom_m numeric, 
    outlet_water_surface_to_residual_pool_top_m numeric,
    residual_pool_confidence_code integer references stream_crossings.confidence_codes(code),
    structure_length_m numeric,
    inlet_shape_code integer references stream_crossings.shape_codes(code),
    inlet_type_code integer references stream_crossings.inlet_type_codes(code),
    inlet_grade_code integer references stream_crossings.grade_codes(code),
    inlet_width_m numeric,
    inlet_height_m numeric,
    inlet_substrate_water_width_m numeric,
    inlet_water_depth_m numeric,
    structure_slope_pct numeric,
    structure_slope_method_code integer references stream_crossings.slope_method_codes(code),
    structure_slope_to_channel_code integer references stream_crossings.relative_slope_codes(code),
    substrate_type_code integer references stream_crossings.substrate_type_codes(code),
    substrate_matches_stream_code integer references stream_crossings.substrate_matches_stream_codes(code),
    substrate_coverage_code integer references stream_crossings.structure_coverage_codes(code),
    substrate_depth_consistent boolean,
    backwatered_pct_code integer references stream_crossings.structure_coverage_codes(code),
    physical_blockages_code int[], -- stream_crossings.blockage_type_codes(code),
    physical_blockage_severity_code integer references stream_crossings.blockage_severity_codes(code),
    water_depth_matches_stream_code integer references stream_crossings.water_depth_matches_stream_codes(code),
    water_velocity_matches_stream_code integer references stream_crossings.water_velocity_matches_stream_codes(code),
    dry_passage boolean,
    height_above_dry_passage_m numeric,
    structure_comments varchar,
    passability_status_code integer
);



